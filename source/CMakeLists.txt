set(thisfolder ${CMAKE_CURRENT_SOURCE_DIR})

target_sources(Wirefox
  PRIVATE
    ${thisfolder}/AwaitableEvent.cpp
    ${thisfolder}/AwaitableEvent.h
    ${thisfolder}/BinaryStream.cpp
    ${thisfolder}/Channel.cpp
    ${thisfolder}/ChannelBuffer.cpp
    ${thisfolder}/ChannelBuffer.h
    ${thisfolder}/CongestionControl.cpp
    ${thisfolder}/CongestionControl.h
    ${thisfolder}/CongestionControlWindow.cpp
    ${thisfolder}/CongestionControlWindow.h
    ${thisfolder}/DatagramBuilder.cpp
    ${thisfolder}/DatagramBuilder.h
    ${thisfolder}/DatagramHeader.cpp
    ${thisfolder}/DatagramHeader.h
    ${thisfolder}/EncryptionAuthenticator.cpp
    ${thisfolder}/EncryptionAuthenticator.h
    ${thisfolder}/EncryptionLayer.h
    ${thisfolder}/EncryptionLayerNull.h
    ${thisfolder}/EncryptionLayerSodium.cpp
    ${thisfolder}/EncryptionLayerSodium.h
    ${thisfolder}/Handshaker.cpp
    ${thisfolder}/Handshaker.h
    ${thisfolder}/HandshakerThreeWay.cpp
    ${thisfolder}/HandshakerThreeWay.h
    ${thisfolder}/PCH.cpp
    ${thisfolder}/PCH.h
    ${thisfolder}/Packet.cpp
    ${thisfolder}/PacketHeader.cpp
    ${thisfolder}/PacketHeader.h
    ${thisfolder}/PacketQueue.cpp
    ${thisfolder}/PacketQueue.h
    ${thisfolder}/Peer.cpp
    ${thisfolder}/Peer.h
    ${thisfolder}/ReceiptTracker.cpp
    ${thisfolder}/ReceiptTracker.h
    ${thisfolder}/RemoteAddress.cpp
    ${thisfolder}/RemoteAddress.h
    ${thisfolder}/RemotePeer.cpp
    ${thisfolder}/RemotePeer.h
    ${thisfolder}/Socket.h
    ${thisfolder}/SocketUDP.cpp
    ${thisfolder}/SocketUDP.h
    ${thisfolder}/WirefoxTime.cpp
    ${thisfolder}/WirefoxCBindings.cpp
    ${thisfolder}/WirefoxConfigRefs.h
)
target_include_directories(Wirefox
  PRIVATE
    ${thisfolder}
)
