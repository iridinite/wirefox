<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Sprite_CellHit" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS41ZEdYUgAAAjBJREFUWEfNlz1K
        BEEUhBsUQRQEQVARRRAEBRPBWE09gJEgGG3kGYyMFhEP4AH0CnsHr2AkmBhsJIhjfdpv6XHG2Z7uES0o
        GHq6q2r+et5z/w3T4ry4IM6KE2Iu0EALTbTxqMWcuCsei6fiobgq5oRgLRpooYk2HniVQKo9sX8w454v
        F927jgfimZgawszRGKCJto77Il6lO8GtOdmfcS/DbVcUO664WnKFxh7FlBCh+SNaaKKNh8ZORDxHWBR7
        tytfE42JIWrNjXhovCfiOQLP5GjSuYe71fKCliEazdHGQ+eOxNJ7MCWui+eaMEwMEWM+1LlzES88S2Bg
        Q0wJ0cYcj4q5ISVEZ+aGNiG4lbAzc0NMiCfxwvOpzlzjjc98HGJCfHLMlSeZG8aG+E1zQxji9XuIkN78
        lbl+Tba5AaFNsS+DT6MfzHkk7PXM7cwc8KlxRZdicb1cDcAY5/wc5ob7RBbC77zytof0LyZfR7hPZKFx
        k7lf+2I45kPE/jsa0Whuz7zunegiRIz5m87dQI67DBFjbt/5lmfMth0Voo25fefhPpEVIsXckB0ix9yQ
        FYK6ndJ5kGhuiAlBtY0XniPQNJxSOocLWpobGkP4kp8eAc8RKJGPqdutLE80N9SGQNv3BjQopbKcJoGO
        pU/dTumshVSvKeaGMMQDmr4n4GeFV6VFo0ymY6FpoG6ndM79n7MWDbTQRBuPSmtmIBW3hqaBSTnmBjTQ
        QhPtypX/IZz7AF9LSJ6oD5GVAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="Sprite_CellMiss" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS41ZEdYUgAAA1FJREFUWEfVl1+E
        VFEcx4cZEREpLdFDsv3RZtMfRSy9Rtm3pGEfopdRrB5GT70UTYYeMhrFPuxr78sykslk9LDMw1JJ0lPS
        Q1abVZy+n+uc68zMvXvP3JqlH1+u3/n9Oef375xb+B9pu7BL2C8ctOAbHmtjIQxPCCeFWWFeqAkNC77h
        sYYMsv9kM9uEfcIFoSosFUultenTZ83lK9fM9Vu3I/ANjzVkrCw66GIjF+0QpoSK0D5yfNrcf/zUvPn0
        1Xz4YRLBGjLIomN1sYGtkQiFM0Jt994J8+DJQqLDNLz9/ivSQVc26sI5YacQRM5548DkYdPqvR9y8Ord
        Z1N/tmiq9x5G4DtJ7uXqRzN59BibaApsIjMS5IuQ1XA+GO7nL16bqROnMAh6QktYFlbgsYaMr9P7suY2
        QSSwvWlNUDQVQuefiJDevHPXFIul31rnNGVhRqDiAd9XhYZkNijM1W8/Y30iYdNBTeAjkWgbKrft5xzn
        VLj4nHJOOCQktRg81pDpUoj+JrApPoWJj8QWpXerKDolwMnFxzk9vkcoCmnEGjKXhC6RcHY4iO0OWhRf
        Q0Qol2gjp0Q+bdg5FYZDCdk50uHXBLbFZ07gq48IySyDxC88W3DknNBudvJBQhadJjacPWzbYUU0+9LA
        HJ8n106YVhMPUHCJOcsgdNCNbDm7tp4Y2/iMicukxkh1gvS2eLQaFZ6X0O1hy9nFh3jcHfiMiRut4RcN
        A0Y8+nwoXyMQui1sObv4EI8LDJ8xpW2AIfO3G1gO2cBQCmzf0n7nEchJpGAlJAVDRcgkFA8w4fIWIbp9
        UzWtCBFOa0PClacNo7SGtiFEvpIG0Yb4ow4iTleW7nroIIISR7Etmq7AeA0ZxTi/KLTLNyqxnZBRTEi4
        KDr+ZcSFYhXZRNZlRNgZPm2uc65iZ8cWdUdIvYyg+DrmCvU3QSRsOrKu43VO7jtnEoZcx5B7kNR5RPhG
        APm0hQmCHyRW55GQ+SCBeDbxfGqyCT8SDqFPMuSs8wWBeRL8OOUBySbqhM6viRAMPEo5Oc6DH6WO2C0h
        I28dCpE2Gnwn+mANGVu0FFzuZ7kj8kXRULlb/mPiE21D71LxW/prlkQYZthwmdD3gG94Y3M6JioU/gD3
        9s7tdMoCTwAAAABJRU5ErkJggg==
</value>
  </data>
</root>